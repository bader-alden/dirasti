def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.huawei.agconnect'
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.dirasti.dirasti"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {

        debug {
            keyAlias 'upload'
            keyPassword 'iq8da4d'
//            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storeFile file('upload-keystore.jks')
            storePassword  'iq8da4d'
        }

        release {
            keyAlias 'upload'
            keyPassword 'iq8da4d'
//            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storeFile file('upload-keystore.jks')
            storePassword  'iq8da4d'
        }
    }
//    signingConfigs {
//        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
//    }

    buildTypes {

        debug {
            signingConfig signingConfigs.debug
//           proguardFiles getDefaultProguardFile('upload-keystore.jks'), 'proguard-rules.pro'
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
//            useProguard true
//            proguardFiles getDefaultProguardFile('upload-keystore.jks'), 'proguard-rules.pro'
        }
    }
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.test.ext:junit:1.1.5"
    implementation "androidx.fragment:fragment-testing:1.5.5"
    implementation "androidx.test:core:1.5.0"
    implementation 'com.huawei.agconnect:agconnect-core:1.6.5.300'
    implementation 'androidx.work:work-runtime-ktx:2.8.1'
   // implementation "com.huawei.agconnect:agcp:1.8.0.300"
}
